{"version":3,"sources":["components/title.js","components/search.js","components/modal.js","firebase/config.js","providers/userProvider.js","components/Application.js","components/globalStyles.js","components/Theme.js","App.js","components/useDarkMode.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","pink","color","palette","getContrastText","backgroundColor","purple","deepPurple","Title","userName","auth","darkModeToggle","classes","useState","className","style","marginTop","marginBottom","position","display","IconButton","border","outline","fontSize","id","data-toggle","aria-haspopup","aria-expanded","Avatar","alt","toUpperCase","Search","props","type","placeholder","value","term","onChange","e","setTerm","target","onKeyPress","key","search","Modal","selectedImg","setSelectedImg","div","onClick","initial","opacity","animate","img","src","y","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectFireStore","generateUserDocument","FieldValue","serverTimestamp","GoogleAuthProvider","user","additionalData","a","userRef","doc","uid","get","exists","email","displayName","photoURL","set","console","error","getUserDocument","userDocument","data","UserContext","createContext","UserProvider","state","componentDidMount","onAuthStateChanged","userAuth","setState","Provider","this","children","Component","url","HomePage","isDesktopOrLaptop","useMediaQuery","query","isTabletOrMobileDevice","page","setPage","setLoading","images","setImages","useEffect","fetch","then","res","json","log","results","err","Image","image","href","links","html","urls","regular","class","name","dataLength","length","next","concat","hasMore","loader","overflow","map","index","tags","tag","title","small","flexWrap","GlobalStyles","createGlobalStyle","body","text","signInWithGoogleColor","formColor","tagText","signInColor","primary","borderColor","searchBar","searchBorder","heading","lightTheme","toggleBorder","background","secondary","darkTheme","App","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","Application","toggle","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.220d8732.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Brightness6TwoToneIcon from '@material-ui/icons/Brightness6TwoTone';\nimport Brightness2TwoToneIcon from '@material-ui/icons/Brightness2TwoTone';\nimport { IconButton, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple, pink } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    pink: {\n        color: theme.palette.getContrastText(pink[300]),\n        backgroundColor:pink[300],\n        // marginTop:theme.spacing(3)\n      },\n    purple: {\n        color: theme.palette.getContrastText(deepPurple[500]),\n        backgroundColor: deepPurple[500],\n      },\n  }));\n\nexport default function Title({ userName, auth, darkModeToggle, theme }){\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    const changeTheme = () => {\n        darkModeToggle();\n    }\n\n\n    const signOut = () => {\n        console.log('Signing out')\n        if(userName){\n            auth.signOut();\n        }\n    }\n\n\n    return(\n        <div className=\"title\">\n          <div className=\"navbar\">\n            <div className=\"container-fluid\">\n                    <h1>Unsplash-Gallery</h1>\n                    <div style={{marginTop:'-5px'}} className=\"header-icons\">\n                        {/* <div className=\"icon\"><i class=\"fab fa-github\"></i></div>\n                        <div className=\"icon\"><i class=\"fab fa-twitter\"></i></div>\n                        <div className=\"icon\"><i class=\"fab fa-instagram\"></i></div> */}\n                        <div style={{marginBottom:'-7px'}}>\n                            {/* <label class=\"switch\">\n                                <input type=\"checkbox\" checked={theme===\"dark\"} onChange={() => changeTheme()}/>\n                                <span class=\"slider round\"></span>\n                            </label> */}\n                            <div style={{position: 'relative', display: 'inline-block', marginTop:'-5px'}}>\n                               <IconButton style={{border:\"none\", outline:\"none\"}}>\n                                {theme===\"dark\" && <Brightness6TwoToneIcon fontSize=\"large\" style={{color: \"#fff\"}}/>}\n                                {theme===\"light\" && <Brightness2TwoToneIcon fontSize=\"large\" style={{color: \"#f48fb1\"}}/>}\n                               </IconButton>\n                            </div>\n                        </div>\n                           <div style={{marginBottom:'-2px'}}>\n                           <a className=\"nav-link dropdown\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{fontSize:'3rem;'}}>\n                            {theme===\"light\" && <Avatar className={classes.pink} alt={userName}>{userName[0].toUpperCase()}</Avatar>}\n                            {theme===\"dark\" && <Avatar className={classes.purple} alt={userName}>{userName[0].toUpperCase()}</Avatar>}\n                            </a>\n                           </div>\n                    </div>\n                </div>\n          </div>\n            {userName!==null && <h2>Welcome, { userName }</h2>}\n            {userName===null && <h2>Welcome</h2>}\n            <p>Search free high-resolution photos</p>\n      </div>\n    )\n}","import React from 'react';\n\nconst Search = ({props}) => {\n\n    const handleChange = (e) => {\n        if(e.key===\"Enter\" && e.target.value!=\"\"){\n            props.search()\n        }\n    }\n\n    return(\n        <div style={{marginBottom:'20px'}} className=\"col-9 col-md-6 mx-auto\">\n            <input \n                id=\"custom\"\n                className=\"form-control form-control-lg\" \n                type=\"text\" \n                placeholder=\"Cat pictures UwU\" \n                value={props.term}\n                onChange={e => props.setTerm(e.target.value)}\n                onKeyPress={handleChange}\n                />\n        </div>\n    )\n}\n\nexport default Search","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n\n    const handleClick = (e) => {\n        setSelectedImg(null)\n    }    \n\n   return(\n    <motion.div className=\"backdrop\" onClick={handleClick}\n        initial={{opacity:0}}\n        animate={{opacity:1}}\n        >\n        <motion.img src={selectedImg} alt=\"enlarged pic\"\n        initial={{y:'-100vh'}}\n        animate={{y:0}}\n        />\n    </motion.div>\n   )\n}\n\nexport default Modal;","import * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCeYtDEVJRW3VAzzFKf3DtN7MDDj8muyEo\",\n  authDomain: \"my-gallery-app-686f4.firebaseapp.com\",\n  databaseURL: \"https://my-gallery-app-686f4.firebaseio.com\",\n  projectId: \"my-gallery-app-686f4\",\n  storageBucket: \"my-gallery-app-686f4.appspot.com\",\n  messagingSenderId: \"623036665787\",\n  appId: \"1:623036665787:web:a68f6112d543d45056fe9e\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const projectStorage = firebase.storage();\nexport const projectFireStore = firebase.firestore();\nexport const auth = firebase.auth();\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\n\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = projectFireStore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const { email, displayName, photoURL } = user;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n}\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n  try {\n    const userDocument = await projectFireStore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\n\n// export { projectStorage, projectFireStore, auth, timestamp }","import React, { Component, createContext } from 'react';\nimport { auth, generateUserDocument } from '../firebase/config';\n\n\nexport const UserContext = createContext({ user: null });\n\n\nclass UserProvider extends Component{\n    state = {\n        user: null\n      }\n\n    \n      componentDidMount = async () => {\n        auth.onAuthStateChanged(async userAuth => {\n          const user = await generateUserDocument(userAuth);\n          this.setState({ user });\n        });\n      };\n\n    render(){\n        return(\n        <UserContext.Provider value={this.state.user}>\n            {this.props.children}\n          </UserContext.Provider>\n        )\n    }\n}\n\nexport default UserProvider;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Title from './title';\nimport Search from'./search';\nimport Modal from './modal';\nimport { UserContext } from '../providers/userProvider';\nimport { auth } from '../firebase/config';\nimport '../index.css';\nimport { useMediaQuery } from 'react-responsive'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { motion } from 'framer-motion';\nimport { IconButton } from '@material-ui/core';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Button from '@material-ui/core/Button';\n\n\n\n// const url= 'https://pixabay.com/api/'\nconst url = 'https://api.unsplash.com/' //UNSPLASH\n\n\nfunction HomePage({ darkModeToggle, theme }) {\n\n  // const user = useContext(UserContext);\n  // console.log(user)\n  // const { photoURL, email } = user;\n  const displayName=\"User\";\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-device-width: 1224px)'\n  })\n\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: '(max-device-width: 1224px)'\n  })\n\n\n  // const key = \"19529048-a0442e53b19277dfa094f6e1f\"\n  const key = \"1lBCHcgi0-khQZwmixmCYbz6eB0YI4hC6Nhfvw6UDkI\";\n\n  const [page, setPage] = useState(1)\n  const [loading, setLoading] = useState(false)\n  const [selectedImg, setSelectedImg] = useState(null)\n  const [error, setError] = useState(false)\n  const [images, setImages] = useState([])\n  const [term, setTerm] = useState('')\n\n  const fetchImages = () => {\n    setPage(page+1)\n    if(term === ''){\n      setLoading(true)\n      fetch(`${url}/search/photos?client_id=${key}&query=Cats&page=${page}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setImages(images.concat(data.results))\n        setLoading(false)\n      })\n    }\n    else{\n      setLoading(true)\n      fetch(`${url}search/photos?client_id=${key}&query=${term}&page=${page}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setImages(images.concat(data.results))\n        setLoading(false)\n      })\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    fetch(`${url}/search/photos?client_id=${key}&query=Cats`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        // let copy = createCopy(data.results)\n        setImages(data.results)\n        setLoading(false)\n      })\n      .then(err => {\n        console.log(err)\n        //setError(true)\n        setLoading(false)\n      })\n  }, [])\n\n  const search = async() => {\n    setPage(1)\n    try{\n      setLoading(true)\n      let res = await fetch(`${url}/search/photos?client_id=${key}&query=${term}`)\n      let data = await res.json()\n      console.log(data)\n      setImages(data.results)\n      setLoading(false)\n    }\n    catch(error){\n      // setError(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n  }\n\n  // const createCopy = (data) =>{\n  //   return data.map((item) => ({\n  //     ...item,\n  //     selected: false       \n  // }));\n  // }\n\n  const Image = ({image})  => {\n    return(\n      <div className=\"content\">\n         <a href={image.links.html} target=\"_blank\">\n           <div className=\"content-overlay\"></div>\n           <img className=\"content-image\" src={image.urls.regular}/>\n           <div class=\"content-details fadeIn-bottom\">\n            {/* <h3 class=\"content-title\">This is a title</h3> */}\n            <p class=\"content-text\">Photo by {image.user.name} on Unsplash</p>\n          </div>\n         </a>\n      </div>\n    )\n  }\n\n  const download = async (id) => {\n    console.log('hello')\n    let url = \"https://api.unsplash.com/photos/?client_id=\"+process.env.REACT_APP_UNSPLASH_API_KEY+\"&\"+id+\"/download\"\n    let res = await fetch(url)\n    let response = await res.json()\n    console.log(response)\n};\n\n  return (\n    <div className=\"app\">\n      <Title userName = {displayName} auth={auth} darkModeToggle = {darkModeToggle} theme={theme}/>\n      <Search props={{\n        term: term,\n        search: search,\n        setTerm: setTerm\n      }}/>\n      {error && <div className=\"error\">Error trying to load images</div>}\n      {/* {images && <GridImages photos={images} setSelectedImg = {setSelectedImg}/>} */}\n      \n        <InfiniteScroll\n        dataLength = {images.length}\n        next = {fetchImages}\n        hasMore = {true}\n        loader = {\n          <div></div>\n        }\n        >\n          <div className=\"container-fluid mt-4\" style={{overflow:'auto'}}>\n        \n       { isDesktopOrLaptop && <> <div className=\"card-columns\">\n          {images.map((image, index) => (\n            <a href={image.links.html} target=\"_blank\">\n              <figure class=\"figure\">\n              {/* <img src={image.urls.regular} class=\"figure-img img-fluid rounded\" alt=\"...\"/> */}\n              <Image image={image}/>\n              {image.tags && <figcaption class=\"figure-caption d-flex flex-row justify-content-center flex-wrap mt-1\">\n                {image.tags.map((tag) => (\n                  <span className='tag px-3 py-1 mr-2 rounded-pill'>#{tag.title}</span>\n                ))}\n              </figcaption>}\n            </figure>\n            </a>\n          ))}\n          </div> </>}\n\n          {isTabletOrMobileDevice && <><div className=\"card-columns\">\n          {images.map((image, index) => (\n            <a href={image.links.html} target=\"_blank\">\n              {theme === \"light\" && <><div className=\"card cardTheme\">\n              <img src={image.urls.small} className=\"card-img-top\" onClick={() => setSelectedImg(image.urls.regular)}/>\n                        <div class=\"card-body\">\n                            <div className=\"action\">\n                            {/* <IconButton style={{color:'#f50057', fontSize:'18px'}} onClick={() => {}}>\n                                <FavoriteIcon/>\n                            </IconButton> */}\n                             {/* <IconButton size=\"medium\" style={{color:'#444', fontSize:'18px', border:'0.7px solid #444'}} onClick={() => {}}>\n                                  <FavoriteBorderIcon/>\n                              </IconButton> */}\n                                        {/* <a href={image.links.download+ \"?force=true\"} className=\"btn btn-sm btn-light border-0 rounded-lg\" onClick={() => download(image.id)}>\n                                            <i className=\"fas fa-arrow-down custom-icon\" style={{color:\"#689f38\"}}></i> \n                                        </a> */}\n                            {/* <Button size=\"small\" style={{color:'#444', fontWeight:'600', border:'0.7px solid #444'}}>\n                                DOWNLOAD\n                            </Button> */}\n                          \n                                </div>\n                                <div className=\"photo-header mt-1 mb-1\">Photo by <a href={image.user.links.html}>{image.user.name}</a> on <a href=\"https://unsplash.com/\">Unsplash</a></div>\n                                {/* {item.description && <p class=\"card-text\">{item.description}</p>} */}\n                                <div className=\"tags mt-2\" style={{display:'flex', flexWrap:'wrap'}}>\n                                    {image.tags.map((tag) => (\n                                        <span className='tag px-3 py-1 mr-2 rounded-pill'>#{tag.title}</span>\n                                    ))}\n                                </div>\n                        </div>\n              </div></>}\n              \n              {theme === \"dark\" && <><div className=\"card rounded cardTheme\">\n              <img src={image.urls.small} className=\"card-img-top\" onClick={() => setSelectedImg(image.urls.regular)}/>\n                        <div class=\"card-body\">\n                            <div className=\"action\">\n                                    \n                              {/* <IconButton style={{color:'#f50057', fontSize:'18px'}} onClick={() => {}}>\n                                  <FavoriteIcon/>\n                              </IconButton> */}\n\n                              {/* <IconButton size=\"medium\" style={{color:'#fff', fontSize:'18px', border:'0.7px solid #fff'}} onClick={() => {}}>\n                                  <FavoriteBorderIcon/>\n                              </IconButton> */}\n                                        {/* <a href={image.links.download+ \"?force=true\"} className=\"btn btn-sm btn-light border-0 rounded-lg\" onClick={() => download(image.id)}>\n                                            <i className=\"fas fa-arrow-down custom-icon\" style={{color:\"#689f38\"}}></i> \n                                        </a> */}\n                              {/* <Button size=\"small\" style={{color:'#fff', fontWeight:'600', border:'0.7px solid #fff'}}>\n                                DOWNLOAD\n                              </Button> */}\n                                </div>\n                                <div className=\"photo-header mt-1 mb-1\">Photo by <a href={image.user.links.html}>{image.user.name}</a> on <a href=\"https://unsplash.com/\">Unsplash</a></div>\n                                {/* {item.description && <p class=\"card-text\">{item.description}</p>} */}\n                                <div className=\"tags mt-2\" style={{display:'flex', flexWrap:'wrap'}}>\n                                    {image.tags.map((tag) => (\n                                        <span className='tag px-3 py-1 mr-2 rounded-pill'>#{tag.title}</span>\n                                    ))}\n                                </div>\n                        </div>\n              </div></>}\n              \n            </a>\n          ))}\n          </div></>}\n        \n      </div>\n      </InfiniteScroll>\n      {selectedImg && <Modal selectedImg = {selectedImg} setSelectedImg = {setSelectedImg}/>}\n    </div>\n  );\n}\n\nexport default HomePage;\n","import { createGlobalStyle} from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Raleway, sans-serif;\n    transition: all 0.50s linear;\n  }\n\n  .SignIn #signInGoogle, .SignUp #signInWithGoogle {\n    backgroundColor: ${({ theme }) => theme.signInWithGoogleColor};\n  }\n\n  .dropdown-menu{\n    background-color: ${({ theme }) => theme.formColor}  \n}\n\n  .dropdown-item{\n    color: ${({ theme }) => theme.tagText}\n}\n\n\n  .SignIn #signInGoogle:hover, .SignUp #signInWithGoogle:hover{\n    background-color: #e53935;\n    }\n  \n  .SignIn #signIn:hover, .SignUp #signIn:hover {\n    background-color: #4caf50;\n    }\n\n  .SignIn #signIn, .SignUp #signIn {\n    backgroundColor: ${({ theme }) => theme.signInColor};\n  }\n\n  .navbar{\n    font-family: 'Open Sans', sans-serif;\n    color: ${({ theme }) => theme.primary};\n  }\n\n  #custom:focus {   \n    border-color: ${({ theme }) => theme.borderColor};\n    box-shadow: 0 0 0 0.0rem rgb(255,192,203);\n    color: ${({ theme }) => theme.tagText}\n  }\n\n  #custom{\n    background:${({ theme }) => theme.searchBar};\n    border-radius: 25px;\n    border:${({ theme }) => theme.searchBorder};\n    color: ${({ theme }) => theme.tagText}\n  }\n\n  .tag {\n    display: inline block;\n    background-color: ${({ theme }) => theme.tag};\n    color:${({ theme }) => theme.tagText};\n    font-weight: 500;\n    font-size: 12px;\n  }\n\n  .signUpForm {\n    background-color: ${({ theme }) => theme.formColor}\n  }\n\n  .cardTheme {\n    background-color: ${({ theme }) => theme.formColor}\n  }\n\n  .cardTheme .photo-header, .cardTheme a{\n    color: ${({ theme }) => theme.text};\n    font-family: Raleway, sans-serif;\n    size\n  }\n\n  .signInForm {\n    background-color: ${({ theme }) => theme.formColor}\n  }\n\n  .SignUp #custom2, .SignIn #custom2, .PasswordReset #custom2{\n    background:${({ theme }) => theme.searchBar};\n    border:${({ theme }) => theme.searchBorder};\n  }\n\n  .SignUp #custom2:focus, .SignIn #custom2:focus, .PasswordReset #custom2:focus{\n    border:${({ theme }) => theme.searchBorder};\n    box-shadow: 0 0 0 0.0rem rgb(255,192,203);\n    border-color:${({ theme }) => theme.borderColor};\n    color: ${({ theme }) => theme.tagText}\n  }\n\n\n  .form-control.is-invalid, .was-validated .form-control:invalid {\n    background:${({ theme }) => theme.searchBar};\n    color: ${({ theme }) => theme.tagText}\n  }\n\n\n  \n  #navbarDropdownMenuLink{\n    color: ${({ theme }) => theme.primary};\n  }\n\n  .SignIn .formHeading, .SignUp .formHeading{\n    color: ${({ theme }) => theme.primary};\n  }\n\n  .PasswordReset .formHeading{\n    color: ${({ theme }) => theme.heading};\n  }\n\n  .fa-user{\n    color: ${({ theme }) => theme.primary};\n  }\n\n  title h1{\n    color: ${({ theme }) => theme.primary};\n  }\n\n  .caret{\n    background-color: ${({ theme }) => theme.primary};\n  }\n  `\n","export const lightTheme = {\n    body:'#FFF',\n    text:'#4e4e4e',\n    toggleBorder:'#FFF',\n    background:'#4e4e4e',\n    primary:'#f48fb1',\n    secondary:'#4E4E4E',\n    searchBorder:1,\n    borderColor:'#ced4da',\n    formColor:'#FFF',\n    searchBar:'#FFF',\n    tag:'#eeeeee',\n    tagText:'#616161',\n    error:'#ff4a4a',\n    signInWithGoogleColor:'#ef5350',\n    signInColor:'#66bb6a',\n    heading:'#000'\n}\n\nexport const darkTheme = {\n    body:'#010409',\n    text:'#fafafa',\n    toggleBorder:'#6DB8096',\n    background:'#fafafa',\n    primary:'#FFF',\n    secondary:'#2c2e31',\n    searchBorder:0,\n    formColor:'#212121',\n    searchBar:'#2c2e31',\n    borderColor:'#2c2e31',\n    tag:'#2c2e32',\n    tagText:'#FFF',\n    error:'#f85149',\n    signInColor:'#388e3c',\n    signInWithGoogleColor:'#d32f2f',\n    heading:'#fff'\n}","import React, {useState, useEffect} from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport  {useDarkMode} from \"./components/useDarkMode\"\nimport Application from './components/Application';\nimport { GlobalStyles } from './components/globalStyles';\nimport { lightTheme, darkTheme } from './components/Theme';\nimport UserProvider from './providers/userProvider';\n\nfunction App(){\n\n    const [theme, themeToggler, mountedComponent] = useDarkMode();\n\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    if(!mountedComponent) return(\n        <div style={{backgroundColor:'#000'}}></div>\n    );\n\n    return(\n        <UserProvider>\n            <ThemeProvider theme = {themeMode}>\n                <>\n                <GlobalStyles/>\n                <Application {...{toggle: themeToggler, theme: theme}}/>\n                </>\n            </ThemeProvider>\n        </UserProvider>\n    )\n}\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n    const [mountedComponent, setMountedComponent] = useState(false)\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    }\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme ? setTheme(localTheme) : setMode('light')\n        setMountedComponent(true)\n    }, []);\n\n    return [theme, themeToggler, mountedComponent];\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}